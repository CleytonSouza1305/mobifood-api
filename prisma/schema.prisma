// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int              @id @default(autoincrement())
  username       String           @db.VarChar(255)
  email          String           @unique @db.VarChar(255)
  password       String
  phone          String?          @db.VarChar(20)
  role           UserRole         @default(user)
  favoriteTheme FavoriteTheme @default(light)
  address        Address[]
  paymentMethods PaymentMethods[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

enum UserRole {
  user
  admin
  delivery
}

enum FavoriteTheme {
  dark
  light
}

model Address {
  id       Int         @id @default(autoincrement())
  userId   Int
  user     User        @relation(fields: [userId], references: [id])
  street   String      @db.VarChar(255)
  city     String      @db.VarChar(100)
  number   String      @db.VarChar(20)
  state    String      @db.VarChar(100)
  role     AddressRole @default(Casa)
  isActive Boolean     @default(true)
}

enum AddressRole {
  Casa
  Trabalho
  Escola
  Outros
}

model PaymentMethods {
  id        Int         @id @default(autoincrement())
  method    PaymentType
  details   Json? 
  isDefault Boolean     @default(false)
  userId    Int
  user      User        @relation(fields: [userId], references: [id])
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@map("payment_methods")
}

enum PaymentType {
  CREDIT_CARD
  DEBIT_CARD
  PIX
  PAYPAL
}
